var oOutput = Context.createOutputObject()
var xlTableActive=false
oOutput.DefineF(getString("ID_STYLE_RD_HEADER_FOOTER"), getString("ID_DEFAULT_FONT"), 10, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT| Constants.FMT_VTOP, 0, 0, 0, 0, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_DEFAULT"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT| Constants.FMT_VTOP, 0, 0, 0, 0, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_TABLE_HEAD"), getString("ID_DEFAULT_FONT"), 8, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_BOLD | Constants.FMT_CENTER| Constants.FMT_VTOP, 0, 0, 0, 0, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_TABLE_CONTENT"), getString("ID_DEFAULT_FONT"), 8, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT| Constants.FMT_VTOP, 0, 0, 0, 0, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_INFO"), getString("ID_DEFAULT_FONT"), 14, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_BOLD | Constants.FMT_CENTER| Constants.FMT_VTOP, 0, 0, 1.76, 8.82, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_HEADING_3"), getString("ID_DEFAULT_FONT"), 12, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_ITALIC | Constants.FMT_BOLD | Constants.FMT_LEFT| Constants.FMT_VTOP| Constants.FMT_TOCENTRY2 , 0, 0, 1, 1, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_HEADING_4"), getString("ID_DEFAULT_FONT"), 12, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_ITALIC | Constants.FMT_BOLD | Constants.FMT_LEFT| Constants.FMT_VTOP| Constants.FMT_TOCENTRY3 , 0, 0, 0, 0, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_HEADING_1"), getString("ID_DEFAULT_FONT"), 18, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_BOLD | Constants.FMT_LEFT| Constants.FMT_VTOP| Constants.FMT_TOCENTRY0 , 0, 0, 4, 4, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_TITLE"), getString("ID_DEFAULT_FONT"), 21, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_BOLD | Constants.FMT_CENTER| Constants.FMT_VTOP, 0, 0, 1.76, 8.82, 0, 1)
oOutput.DefineF(getString("ID_STYLE_RD_HEADING_2"), getString("ID_DEFAULT_FONT"), 14, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_ITALIC | Constants.FMT_BOLD | Constants.FMT_LEFT| Constants.FMT_VTOP| Constants.FMT_TOCENTRY1 , 0, 0, 2, 2, 0, 1)
setupOutputObject( oOutput )
oOutput.SetTitle(Context.getScriptInfo(Constants.SCRIPT_NAME))

var nLocale = Context.getSelectedLanguage()
createSection1(oOutput, ArisData.getSelectedDatabases())
oOutput.WriteReport()

/** Apply default page format settings to output object
 * @param {Output} outputObj The output object
 */
function setupOutputObject(outputObj)
{
	outputObj.SetPageWidth(297.20)
	outputObj.SetPageHeight(210.10)
	outputObj.SetLeftMargin(20)
	outputObj.SetRightMargin(20)
	outputObj.SetTopMargin(20)
	outputObj.SetBottomMargin(10)
	outputObj.SetDistHeader(10)
	outputObj.SetDistFooter(10)
	outputObj.SetAutoTOCNumbering(true)
	globalHeader(outputObj)

	globalFooter(outputObj)
}
function globalHeader(outputObj) {
	outputObj.BeginHeader()
	outputObj.EndHeader()
}
function globalFooter(outputObj) {
	outputObj.BeginFooter()
	outputObj.EndFooter()
}

/**
 * @param {Output} p_output The output object
 * @param {Database[]} p_aDatabase 
*/
function createSection1(p_output, p_aDatabase)
{
	// do not create new section if all data is empty
	if(p_aDatabase.length==0)
		return

	//produce one table sheet per section
	if(xlTableActive && Context.getSelectedFormat()==Constants.OUTEXCEL) {
		p_output.EndTable("", 100, "", 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0, Constants.FMT_LEFT, 0)
		xlTableActive=false
	}
	p_output.BeginSection(false, Constants.SECTION_DEFAULT)
	setupOutputObject( p_output ) //use defaults
	if(Context.getSelectedFormat()==Constants.OUTEXCEL) {
		p_output.BeginTable(100, Constants.C_BLACK, Constants.C_TRANSPARENT,  Constants.FMT_LEFT | Constants.FMT_REPEAT_HEADER, 0)
		xlTableActive=true
	}
	if(Context.getSelectedFormat()!=Constants.OUTEXCEL)
		p_output.BeginTable(65, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0)
		p_output.TableRow()
			p_output.ResetFrameStyle()
			p_output.TableCell("", 7.68, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
		p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
		p_output.OutputLn(getString("ID_REPORTDEF_2"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
		p_output.EndParagraph()
			p_output.TableCell("", 7.68, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
		p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
		p_output.OutputLn(getString("ID_REPORTDEF_3"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
		p_output.EndParagraph()
			p_output.TableCell("", 7.68, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
		p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
		p_output.OutputLn(getString("ID_REPORTDEF_4"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
		p_output.EndParagraph()
			p_output.TableCell("", 41.15, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
		p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
		p_output.OutputLn(getString("ID_REPORTDEF_5"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
		p_output.EndParagraph()
			p_output.TableCell("", 35.82, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
		p_output.BeginParagraph( Constants.FMT_LEFT, 0.35, 0.71, 0, 0, 0)
		p_output.OutputLn(getString("ID_REPORTDEF_6"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
		p_output.EndParagraph()
	if(Context.getSelectedFormat()!=Constants.OUTEXCEL){
		p_output.EndTable("", 100, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0, Constants.FMT_LEFT, 0)
	}else{
		p_output.TableRow();
	// repetition of queried data:
	for(var i=0; i<p_aDatabase.length; i++) {
		iteration_group(p_output, ArisData.sort(p_aDatabase[i].Find(Constants.SEARCH_MODEL,[Constants.MT_VAL_ADD_CHN_DGM], Constants.AT_NAME, nLocale, "*_Окружение БП*", Constants.SEARCH_CMP_WILDCARDS),Constants.AT_NAME, nLocale));
	}

	// createSection1 local functions:
		/**
		 * @param {Output} p_output The output object
		 * @param {Model[]} p_aModel 
		*/
		function iteration_group(p_output, p_aModel)
		{
			// repetition of queried data:
			for(var i1=0; i1<p_aModel.length; i1++) {
				iteration_group1(p_output, ArisData.sort(p_aModel[i1].ObjDefListByTypes([Constants.OT_FUNC]),Constants.AT_HIER_NUM, nLocale))
			}

			// iteration_group local functions:
				/**
				 * @param {Output} p_output The output object
				 * @param {ObjDef[]} p_aObjDef 
				*/
				function iteration_group1(p_output, p_aObjDef)
				{
					static1_group(p_output, collect(p_aObjDef), collect1(p_aObjDef), collect2(p_aObjDef), collect3(p_aObjDef), collect4(p_aObjDef))
					// iteration_group1 local functions:
					/**
					 * @param {Output} p_output The output object
					 * @param {ObjDef[]} p_aObjDef1 
					 * @param {ObjDef[]} p_aObjDef2 
					 * @param {ObjDef[]} p_aObjDef3 
					 * @param {ObjDef[]} p_aObjDef4 
					 * @param {ObjDef[]} p_aObjDef5 
					*/
					function static1_group(p_output, p_aObjDef1,p_aObjDef2,p_aObjDef3,p_aObjDef4,p_aObjDef5)
					{
						dtable(p_output, collect5(p_aObjDef))
						// static1_group local functions:
						/**
						 * @param {Output} p_output The output object
						 * @param {Attr[]} p_aAttr 
						*/
						function dtable(p_output, p_aAttr)
						{
							// do not create new table if all data is empty
							if(p_aAttr.length==0)
								return
						
							if(Context.getSelectedFormat()!=Constants.OUTEXCEL)
								p_output.BeginTable(65, RGB(0,0,0), RGB(255,255,255),  Constants.FMT_LEFT, 0)
							// repetition of queried data:
							for(var i2=0; i2<p_aAttr.length; i2++) {
								p_output.TableRow()
									p_output.ResetFrameStyle()
									p_output.TableCell("", 8.10, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, RGB(255,255,255), 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
								p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
							for(var iter=0; iter<p_aObjDef.length; iter++) {
								writeData(p_output, p_aObjDef[iter].Name(nLocale))
							}
								p_output.Output(getString("ID_REPORTDEF_7"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							for(var iter=0; iter<p_aObjDef.length; iter++) {
								writeData1(p_output, p_aObjDef[iter].Attribute(Constants.AT_DESC, nLocale).GetValue(false))
							}
								p_output.EndParagraph()
									p_output.TableCell("", 7.25, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, RGB(255,255,255), 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
								p_output.BeginParagraph( Constants.FMT_LEFT, 0.35, 0.71, 0, 0, 0)
							for(var iter=0; iter<p_aObjDef1.length; iter++) {
								writeData2(p_output, p_aObjDef1[iter].Name(nLocale))
							}
								p_output.Output(getString("ID_REPORTDEF_7"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
							for(var iter=0; iter<p_aObjDef1.length; iter++) {
								writeData3(p_output, p_aObjDef1[iter].Attribute(Constants.AT_DESC, nLocale).GetValue(false))
							}
								p_output.EndParagraph()
									p_output.TableCell("", 7.68, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, RGB(255,255,255), 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
								p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
							for(var iter=0; iter<p_aObjDef2.length; iter++) {
								writeData4(p_output, p_aObjDef2[iter].Name(nLocale))
							}
								p_output.EndParagraph()
									p_output.TableCell("", 41.15, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, RGB(255,255,255), 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
								p_output.BeginParagraph( Constants.FMT_LEFT, 0.71, 0.71, 0, 0, 0)
							for(var iter=0; iter<p_aObjDef4.length; iter++) {
								writeData5(p_output, p_aObjDef4[iter].Name(nLocale))
							}
								p_output.Output(getString("ID_REPORTDEF_7"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							for(var iter=0; iter<p_aObjDef4.length; iter++) {
								writeData6(p_output, p_aObjDef4[iter].Attribute(Constants.AT_DESC, nLocale).GetValue(false))
							}
								p_output.EndParagraph()
									p_output.TableCell("", 35.82, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, RGB(255,255,255), 0,  Constants.FMT_VTOP |  Constants.FMT_LEFT, 0)
								p_output.BeginParagraph( Constants.FMT_LEFT, 0.35, 0.71, 0, 0, 0)
							for(var iter=0; iter<p_aObjDef5.length; iter++) {
								writeData7(p_output, p_aObjDef5[iter].Name(nLocale))
							}
								p_output.OutputLn(getString("ID_REPORTDEF_7"), getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
								p_output.EndParagraph()
							}

							if(Context.getSelectedFormat()!=Constants.OUTEXCEL)
								p_output.EndTable("", 100, getString("ID_DEFAULT_FONT"), 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0, Constants.FMT_LEFT, 0)
							else
								p_output.TableRow()

							// dtable local functions:
							/**
							 * @param {Output} p_output The output object
							 * @param {String } p_String
							*/
							function writeData(p_output, p_String) {
								p_output.Output(p_String, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {Object } p_Object
							*/
							function writeData1(p_output, p_Object) {
								p_output.OutputLn(p_Object, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {String } p_String
							*/
							function writeData2(p_output, p_String) {
								p_output.Output(p_String, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {Object } p_Object
							*/
							function writeData3(p_output, p_Object) {
								p_output.OutputLn(p_Object, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {String } p_String
							*/
							function writeData4(p_output, p_String) {
								p_output.OutputLn(p_String, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {String } p_String
							*/
							function writeData5(p_output, p_String) {
								p_output.Output(p_String, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {Object } p_Object
							*/
							function writeData6(p_output, p_Object) {
								p_output.OutputLn(p_Object, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.71)
							}
							/**
							 * @param {Output} p_output The output object
							 * @param {String } p_String
							*/
							function writeData7(p_output, p_String) {
								p_output.Output(p_String, getString("ID_DEFAULT_FONT"), 11, RGB(0,0,0), Constants.C_TRANSPARENT,  Constants.FMT_LEFT, 0.35)
							}
						}
						
						function collect5(p_array){
							var result = new Array();
							for(var i=0; i<p_array.length; i++){
								result.push(p_array[i].Attribute(Constants.AT_HIER_NUM, nLocale))
							}
							return ArisData.Unique(result)
						}
					}
					
					function collect4(p_array){
						var result = new Array();
						for(var i=0; i<p_array.length; i++){
							result = result.concat(p_array[i].getConnectedObjs([Constants.OT_PACK], Constants.EDGES_OUT, [Constants.CT_HAS_OUT]))
						}
						return ArisData.Unique(result)
					}
					function collect2(p_array){
						var result = new Array();
						for(var i=0; i<p_array.length; i++){
							result = result.concat(p_array[i].getConnectedObjs(new Array(Constants.OT_ORG_UNIT,Constants.OT_ORG_UNIT_TYPE), Constants.EDGES_TYP, [Constants.CT_HAS_CONSLT_ROLE_IN_1]))
						}
						return ArisData.Unique(result)
					}
					function collect3(p_array){
						var result = new Array();
						for(var i=0; i<p_array.length; i++){
							result = result.concat(p_array[i].getConnectedObjs([Constants.OT_PACK], Constants.EDGES_IN, [Constants.CT_IS_INP_FOR]))
						}
						return ArisData.Unique(result)
					}
					function collect1(p_array){
						var result = new Array();
						for(var i=0; i<p_array.length; i++){
							result = result.concat(p_array[i].getConnectedObjs(new Array(Constants.OT_GRP,Constants.OT_PERS_TYPE), Constants.EDGES_TYP, null))
						}
						return ArisData.Unique(result)
					}
					function collect(p_array){
						var result = new Array();
						for(var i=0; i<p_array.length; i++){
							result = result.concat(p_array[i].getConnectedObjs([Constants.OT_OBJECTIVE], Constants.EDGES_TYP, null))
						}
						return ArisData.Unique(result)
					}
				}
				
		}
		
	if(Context.getSelectedFormat()==Constants.OUTEXCEL) {
		p_output.EndTable(getString("ID_REPORTDEF_8"), 100, "", 10, Constants.C_BLACK, Constants.C_TRANSPARENT, 0, Constants.FMT_LEFT, 0)
		xlTableActive=false
	}
	p_output.EndSection()


}


function RGB(r, g, b) {
	return (new java.awt.Color(r/255.0,g/255.0,b/255.0,1)).getRGB() & 0xFFFFFF
}
